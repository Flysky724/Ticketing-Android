// Generated by Dagger (https://dagger.dev).
package com.mohkhz.covid19_compose.data.repo;

import android.content.Context;
import com.mohkhz.flysky_agent.data.Api.Api;
import com.mohkhz.flysky_agent_support.data.model.Ticket;
import com.mohkhz.flysky_agent_support.data.model.User;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryImpl_Factory implements Factory<RepositoryImpl> {
  private final Provider<Context> contextProvider;

  private final Provider<User> userProvider;

  private final Provider<Ticket> ticketProvider;

  private final Provider<Api> apiProvider;

  public RepositoryImpl_Factory(Provider<Context> contextProvider, Provider<User> userProvider,
      Provider<Ticket> ticketProvider, Provider<Api> apiProvider) {
    this.contextProvider = contextProvider;
    this.userProvider = userProvider;
    this.ticketProvider = ticketProvider;
    this.apiProvider = apiProvider;
  }

  @Override
  public RepositoryImpl get() {
    return newInstance(contextProvider.get(), userProvider.get(), ticketProvider.get(), apiProvider.get());
  }

  public static RepositoryImpl_Factory create(Provider<Context> contextProvider,
      Provider<User> userProvider, Provider<Ticket> ticketProvider, Provider<Api> apiProvider) {
    return new RepositoryImpl_Factory(contextProvider, userProvider, ticketProvider, apiProvider);
  }

  public static RepositoryImpl newInstance(Context context, User user, Ticket ticket, Api api) {
    return new RepositoryImpl(context, user, ticket, api);
  }
}
